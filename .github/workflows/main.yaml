# on: push

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '3.11'
#       - name: Run image
#         uses: abatilo/actions-poetry@v2
#         with:
#           poetry-version: '2.1.1'
#       - name: Install dependencies
#         run: poetry install
#       - name: Run pytest
#         run: poetry run pytest --cov=app --cov-report=term --cov-fail-under=60 --cov-branch backend/app/tests
#       - name: Run flake8 with maximum complexity of 10
#         run: poetry run flake8 --max-complexity 10 backend/app
#       - name: Run bandit
#         run: poetry run bandit -r backend/app/


name: CI

on: [push, pull_request]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '2.1.1'

      - name: Install backend dependencies
        working-directory: ./backend
        run: poetry install --no-interaction

      - name: Run tests
        run: |
          cd backend
          export PYTHONPATH=$PYTHONPATH:$(pwd)/app
          poetry install
          poetry run python3 -m pytest app/tests/
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          TOKEN_ALGORITHM: ${{ secrets.TOKEN_ALGORITHM }}
          RSA_PUBLIC_KEY: ${{ secrets.RSA_PUBLIC_KEY }}
          RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
          ACCESS_TOKEN_EXPIRES_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRES_MINUTES }}
          REFRESH_TOKEN_EXPIRES_DAYS: ${{ secrets.REFRESH_TOKEN_EXPIRES_DAYS }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}

      - name: Run backend tests
        working-directory: ./backend
        run: poetry run python3 -m flake8

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '2.1.1'

      - name: Install backend dependencies
        working-directory: ./frontend
        run: poetry install --no-root

      - name: Run backend tests
        working-directory: ./frontend
        run: poetry run python3 -m flake8
        

  # frontend:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.11"

  #     - name: Install Poetry
  #       run: pip install poetry

  #     - name: Install frontend dependencies