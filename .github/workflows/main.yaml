name: CI Pipeline

on: [push, pull_request]

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python & Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '2.1.1'

      # install your project deps
      - name: Install backend dependencies
        working-directory: ./backend
        run: poetry install --no-interaction

      # add the export plugin so 'poetry export' works
      - name: Add poetry-export plugin
        run: poetry self add poetry-plugin-export

      # set up Node.js so we can install the Snyk CLI
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Snyk CLI
        run: npm install -g snyk

      # export a requirements.txt for Snyk
      - name: Export dependencies
        working-directory: ./backend
        run: poetry export -f requirements.txt --without-hashes > requirements.txt

      # run the Snyk dependency scan
      - name: Run Snyk dependency scan
        working-directory: ./backend
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --file=requirements.txt --package-manager=pip \
                       --project-name=weather-monitoring-backend

      - name: Run tests and check coverage is above 60%
        run: |
          cd backend
          export PYTHONPATH=$PYTHONPATH:$(pwd)/app
          poetry install
          poetry run python3 -m coverage run -m pytest app/tests/ \
          && poetry run python3 -m coverage report --fail-under=60 -m
        env:
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          TOKEN_ALGORITHM: ${{ secrets.TOKEN_ALGORITHM }}
          RSA_PUBLIC_KEY: ${{ secrets.RSA_PUBLIC_KEY }}
          RSA_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
          ACCESS_TOKEN_EXPIRES_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRES_MINUTES }}
          REFRESH_TOKEN_EXPIRES_DAYS: ${{ secrets.REFRESH_TOKEN_EXPIRES_DAYS }}
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          MAIL_HOST: ${{ secrets.MAIL_HOST }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          MAIL_PORT: ${{ secrets.MAIL_PORT }}

      - name: Check backend lint
        working-directory: ./backend
        run: poetry run python3 -m flake8

      - name: Run bandit
        working-directory: ./backend
        run: poetry run python3 -m bandit -r app/ -c bandit.yml

      - name: Check cyclomatic complexity
        working-directory: ./backend
        run: poetry run python3 -m radon cc -n A -s -a backend/app


  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: '2.1.1'

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: poetry install --no-root

      - name: Check frontend lint
        working-directory: ./frontend
        run: poetry run python3 -m flake8
        